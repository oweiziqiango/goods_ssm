<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!-- 配置SpringMVC -->
	<!-- 1.开启SpringMVC注解模式 -->
	<!-- 简化配置： (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 -->
	<mvc:annotation-driven conversion-service="conversionService" />
	<!-- conversion-service="conversionService" 开启自定义类型转换 -->
	<!-- 自定义参数绑定 -->
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<!-- 转换器 -->
		<property name="converters">
			<list>
				<!-- bigDecimal转化类 -->
				<bean class="com.cqupt.goods_ssm.web.conversion.BigDecimalConverter"></bean>
			</list>
		</property>
	</bean>	

	<!-- 2.静态资源默认servlet配置 (1)加入对静态资源的处理：js,gif,png (2)允许使用"/"做整体映射 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<!-- 开启默认的servlet 之后 可以在web.xml中配置不拦截静态资源 -->
	<mvc:default-servlet-handler />

	<!-- 3.定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/jsps/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="10485760000"></property><!-- 最大上传文件大小 -->
		<property name="maxInMemorySize" value="10960"></property>
	</bean>
	<!-- 在spring-mvc.xml文件中加入这段配置后，spring返回给页面的都是utf-8编码了 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<!-- 4.扫描web相关的bean
		将bean的创建交给spring容器
	 -->
	<context:component-scan base-package="com.cqupt.goods_ssm.web" />
	<!-- 5.权限拦截器 
		只能拦截action
		-->
	<mvc:interceptors>
		<mvc:interceptor>
			<!--2018.8.2  应该在所有user访问的前面加/user，这样在用户登录拦截时就不用添加admin的exclude -->
			<mvc:mapping path="/**" />
			<!-- <mvc:exclude-mapping path="/category/**"/> -->
			<mvc:exclude-mapping path="/category/**"/>
			<mvc:exclude-mapping path="/book/**"/>
			<mvc:exclude-mapping path="/admin/**"/>
			<bean id="LoginInterceptor" class="com.cqupt.goods_ssm.web.interceptor.LoginInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/admin/**" />
			<mvc:exclude-mapping path="/admin/login"/>
			<bean id="AmdinLoginInterceptor" class="com.cqupt.goods_ssm.web.interceptor.AmdinLoginInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
</beans>